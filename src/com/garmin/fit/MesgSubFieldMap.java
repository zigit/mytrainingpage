////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.0Release
// Tag = $Name: AKW1_000 $
////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;

import java.util.ArrayList;

public class MesgSubFieldMap {
   private class FieldMap {
      private class SubFieldMap {
         private class RefField {
            private int num;
            private long value;
            
            public RefField(int num, long value)
            {
               this.num = num;
               this.value = value;
            }
         }

         private String name;
         private ArrayList<RefField> fields;

         public SubFieldMap(String name) {
            this.name = name;
            this.fields = new ArrayList<RefField>();
         }

         public void add(int refFieldNum, long refFieldValue) {
            fields.add(new RefField(refFieldNum, refFieldValue));
         }
    
         public void map(int fieldNum, Mesg mesg) {
            for (RefField refField : fields) {
               Field field = mesg.getField(refField.num);

               if (field != null) {
                  Long value = field.getLongValue();
                  if (value != null) {
                     if (value.longValue() == refField.value) {
                        mesg.setField(Factory.createField(mesg.name, name, mesg.getField(fieldNum).values));
                     }
                  }
               }
            }
         }
      }

      public int num;
      public ArrayList<SubFieldMap> subFields;

      public FieldMap(int num) {
         this.num = num;
         subFields = new ArrayList<SubFieldMap>();
      }

      public void add(String subFieldName, int refFieldNum, long refFieldValue) {
         for (SubFieldMap subField : subFields) {
            if (subField.name.equals(subFieldName))
               subField.add(refFieldNum, refFieldValue);
         }
         
         subFields.add(new SubFieldMap(subFieldName));
         subFields.get(subFields.size() - 1).add(refFieldNum, refFieldValue);
      }

      protected void map(Mesg mesg) {
         if (mesg.getField(num) == null)
            return;
         
         for (SubFieldMap subField : subFields) {
            subField.map(num, mesg);
         }
      }
   }

   protected int mesgNum;
   private ArrayList<FieldMap> fields;

   protected MesgSubFieldMap(int mesgNum) {
      this.mesgNum = mesgNum;
      this.fields = new ArrayList<FieldMap>();
   }

   protected void add(String subFieldName, int fieldNum, int refFieldNum, long refFieldValue) {
      for (FieldMap field : fields) {
         if (field.num == fieldNum) {
            field.add(subFieldName, refFieldNum, refFieldValue);
            return;
         }
      }

      fields.add(new FieldMap(fieldNum));
      fields.get(fields.size() - 1).add(subFieldName, refFieldNum, refFieldValue);
   }

   protected void map(Mesg mesg) {
      if (mesg.num != mesgNum)
         return;

      for (FieldMap field : fields) {
         field.map(mesg);
      }
   }
}