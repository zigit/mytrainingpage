////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.0Release
// Tag = $Name: AKW1_000 $
////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;


public class UserProfileMesg extends Mesg {


   public UserProfileMesg() {
      super(Factory.createMesg(MesgNum.USER_PROFILE));
   }

   public UserProfileMesg(final Mesg mesg) {
      super(mesg);
   }
   
   /**
    * Get message_index field
    *
    * @return message_index
    */
   public Integer getMessageIndex() {
      return getFieldIntegerValue(254);
   }

   /**
    * Set message_index field
    *
    * @param messageIndex
    */
   public void setMessageIndex(Integer messageIndex) {
      setFieldValue("message_index", messageIndex);
   }   
   /**
    * Get friendly_name field
    *
    * @return friendly_name
    */
   public String getFriendlyName() {
      return getFieldStringValue(0);
   }

   /**
    * Set friendly_name field
    *
    * @param friendlyName
    */
   public void setFriendlyName(String friendlyName) {
      setFieldValue("friendly_name", friendlyName);
   }   
   /**
    * Get gender field
    *
    * @return gender
    */
   public Gender getGender() {
      Short value = getFieldShortValue(1);
     if (value == null)
        return null;
      return Gender.getByValue(value);
   }

   /**
    * Set gender field
    *
    * @param gender
    */
   public void setGender(Gender gender) {
      setFieldValue("gender", gender.value);
   }   
   /**
    * Get age field
    * Units: years
    *
    * @return age
    */
   public Short getAge() {
      return getFieldShortValue(2);
   }

   /**
    * Set age field
    * Units: years
    *
    * @param age
    */
   public void setAge(Short age) {
      setFieldValue("age", age);
   }   
   /**
    * Get height field
    * Units: m
    *
    * @return height
    */
   public Float getHeight() {
      return getFieldFloatValue(3);
   }

   /**
    * Set height field
    * Units: m
    *
    * @param height
    */
   public void setHeight(Float height) {
      setFieldValue("height", height);
   }   
   /**
    * Get weight field
    * Units: kg
    *
    * @return weight
    */
   public Float getWeight() {
      return getFieldFloatValue(4);
   }

   /**
    * Set weight field
    * Units: kg
    *
    * @param weight
    */
   public void setWeight(Float weight) {
      setFieldValue("weight", weight);
   }   
   /**
    * Get language field
    *
    * @return language
    */
   public Language getLanguage() {
      Short value = getFieldShortValue(5);
     if (value == null)
        return null;
      return Language.getByValue(value);
   }

   /**
    * Set language field
    *
    * @param language
    */
   public void setLanguage(Language language) {
      setFieldValue("language", language.value);
   }   
   /**
    * Get elev_setting field
    *
    * @return elev_setting
    */
   public DisplayMeasure getElevSetting() {
      Short value = getFieldShortValue(6);
     if (value == null)
        return null;
      return DisplayMeasure.getByValue(value);
   }

   /**
    * Set elev_setting field
    *
    * @param elevSetting
    */
   public void setElevSetting(DisplayMeasure elevSetting) {
      setFieldValue("elev_setting", elevSetting.value);
   }   
   /**
    * Get weight_setting field
    *
    * @return weight_setting
    */
   public DisplayMeasure getWeightSetting() {
      Short value = getFieldShortValue(7);
     if (value == null)
        return null;
      return DisplayMeasure.getByValue(value);
   }

   /**
    * Set weight_setting field
    *
    * @param weightSetting
    */
   public void setWeightSetting(DisplayMeasure weightSetting) {
      setFieldValue("weight_setting", weightSetting.value);
   }   
   /**
    * Get resting_heart_rate field
    * Units: bpm
    *
    * @return resting_heart_rate
    */
   public Short getRestingHeartRate() {
      return getFieldShortValue(8);
   }

   /**
    * Set resting_heart_rate field
    * Units: bpm
    *
    * @param restingHeartRate
    */
   public void setRestingHeartRate(Short restingHeartRate) {
      setFieldValue("resting_heart_rate", restingHeartRate);
   }   
   /**
    * Get default_max_running_heart_rate field
    * Units: bpm
    *
    * @return default_max_running_heart_rate
    */
   public Short getDefaultMaxRunningHeartRate() {
      return getFieldShortValue(9);
   }

   /**
    * Set default_max_running_heart_rate field
    * Units: bpm
    *
    * @param defaultMaxRunningHeartRate
    */
   public void setDefaultMaxRunningHeartRate(Short defaultMaxRunningHeartRate) {
      setFieldValue("default_max_running_heart_rate", defaultMaxRunningHeartRate);
   }   
   /**
    * Get default_max_biking_heart_rate field
    * Units: bpm
    *
    * @return default_max_biking_heart_rate
    */
   public Short getDefaultMaxBikingHeartRate() {
      return getFieldShortValue(10);
   }

   /**
    * Set default_max_biking_heart_rate field
    * Units: bpm
    *
    * @param defaultMaxBikingHeartRate
    */
   public void setDefaultMaxBikingHeartRate(Short defaultMaxBikingHeartRate) {
      setFieldValue("default_max_biking_heart_rate", defaultMaxBikingHeartRate);
   }   
   /**
    * Get default_max_heart_rate field
    * Units: bpm
    *
    * @return default_max_heart_rate
    */
   public Short getDefaultMaxHeartRate() {
      return getFieldShortValue(11);
   }

   /**
    * Set default_max_heart_rate field
    * Units: bpm
    *
    * @param defaultMaxHeartRate
    */
   public void setDefaultMaxHeartRate(Short defaultMaxHeartRate) {
      setFieldValue("default_max_heart_rate", defaultMaxHeartRate);
   }   
   /**
    * Get hr_setting field
    *
    * @return hr_setting
    */
   public DisplayHeart getHrSetting() {
      Short value = getFieldShortValue(12);
     if (value == null)
        return null;
      return DisplayHeart.getByValue(value);
   }

   /**
    * Set hr_setting field
    *
    * @param hrSetting
    */
   public void setHrSetting(DisplayHeart hrSetting) {
      setFieldValue("hr_setting", hrSetting.value);
   }   
   /**
    * Get speed_setting field
    *
    * @return speed_setting
    */
   public DisplayMeasure getSpeedSetting() {
      Short value = getFieldShortValue(13);
     if (value == null)
        return null;
      return DisplayMeasure.getByValue(value);
   }

   /**
    * Set speed_setting field
    *
    * @param speedSetting
    */
   public void setSpeedSetting(DisplayMeasure speedSetting) {
      setFieldValue("speed_setting", speedSetting.value);
   }   
   /**
    * Get dist_setting field
    *
    * @return dist_setting
    */
   public DisplayMeasure getDistSetting() {
      Short value = getFieldShortValue(14);
     if (value == null)
        return null;
      return DisplayMeasure.getByValue(value);
   }

   /**
    * Set dist_setting field
    *
    * @param distSetting
    */
   public void setDistSetting(DisplayMeasure distSetting) {
      setFieldValue("dist_setting", distSetting.value);
   }   
   /**
    * Get power_setting field
    *
    * @return power_setting
    */
   public DisplayPower getPowerSetting() {
      Short value = getFieldShortValue(16);
     if (value == null)
        return null;
      return DisplayPower.getByValue(value);
   }

   /**
    * Set power_setting field
    *
    * @param powerSetting
    */
   public void setPowerSetting(DisplayPower powerSetting) {
      setFieldValue("power_setting", powerSetting.value);
   }   
   /**
    * Get activity_class field
    *
    * @return activity_class
    */
   public ActivityClass getActivityClass() {
      Short value = getFieldShortValue(17);
     if (value == null)
        return null;
      return ActivityClass.getByValue(value);
   }

   /**
    * Set activity_class field
    *
    * @param activityClass
    */
   public void setActivityClass(ActivityClass activityClass) {
      setFieldValue("activity_class", activityClass.value);
   }   
   /**
    * Get position_setting field
    *
    * @return position_setting
    */
   public DisplayPosition getPositionSetting() {
      Short value = getFieldShortValue(18);
     if (value == null)
        return null;
      return DisplayPosition.getByValue(value);
   }

   /**
    * Set position_setting field
    *
    * @param positionSetting
    */
   public void setPositionSetting(DisplayPosition positionSetting) {
      setFieldValue("position_setting", positionSetting.value);
   }   
   /**
    * Get temperature_setting field
    *
    * @return temperature_setting
    */
   public DisplayMeasure getTemperatureSetting() {
      Short value = getFieldShortValue(21);
     if (value == null)
        return null;
      return DisplayMeasure.getByValue(value);
   }

   /**
    * Set temperature_setting field
    *
    * @param temperatureSetting
    */
   public void setTemperatureSetting(DisplayMeasure temperatureSetting) {
      setFieldValue("temperature_setting", temperatureSetting.value);
   }   
   /**
    * Get local_id field
    *
    * @return local_id
    */
   public Integer getLocalId() {
      return getFieldIntegerValue(22);
   }

   /**
    * Set local_id field
    *
    * @param localId
    */
   public void setLocalId(Integer localId) {
      setFieldValue("local_id", localId);
   }
   /**
    * @return number of global_id
    */
   public int getNumGlobalId() {
      return getNumFieldValues(23);
   }
   
   /**
    * Get global_id field
    *
    * @param index of global_id
    * @return global_id
    */
   public Byte getGlobalId(int index) {
      return getFieldByteValue(23, index);
   }

   /**
    * Set global_id field
    *
    * @param index of global_id
    * @param globalId
    */
   public void setGlobalId(int index, Byte globalId) {
      setFieldValue("global_id", index, globalId);
   }

}
