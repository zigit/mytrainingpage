////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.0Release
// Tag = $Name: AKW1_000 $
////////////////////////////////////////////////////////////////////////////////


#if !defined(FIT_BLOOD_PRESSURE_MESG_HPP)
#define FIT_BLOOD_PRESSURE_MESG_HPP

#include "fit_mesg.hpp"

namespace fit
{

class BloodPressureMesg : public Mesg
{
   public:
      BloodPressureMesg(void) : Mesg(Profile::MESG_BLOOD_PRESSURE)
      {
      }

      BloodPressureMesg(const Mesg &mesg) : Mesg(mesg)
      {
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns timestamp field
      // Units: s
      ///////////////////////////////////////////////////////////////////////
      FIT_DATE_TIME GetTimestamp(void)
      {
         return GetFieldUINT32Value(253);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set timestamp field
      // Units: s
      ///////////////////////////////////////////////////////////////////////
      void SetTimestamp(FIT_DATE_TIME timestamp)
      {
         SetFieldUINT32Value(253, timestamp);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns systolic_pressure field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16 GetSystolicPressure(void)
      {
         return GetFieldUINT16Value(0);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set systolic_pressure field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      void SetSystolicPressure(FIT_UINT16 systolicPressure)
      {
         SetFieldUINT16Value(0, systolicPressure);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns diastolic_pressure field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16 GetDiastolicPressure(void)
      {
         return GetFieldUINT16Value(1);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set diastolic_pressure field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      void SetDiastolicPressure(FIT_UINT16 diastolicPressure)
      {
         SetFieldUINT16Value(1, diastolicPressure);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns mean_arterial_pressure field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16 GetMeanArterialPressure(void)
      {
         return GetFieldUINT16Value(2);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set mean_arterial_pressure field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      void SetMeanArterialPressure(FIT_UINT16 meanArterialPressure)
      {
         SetFieldUINT16Value(2, meanArterialPressure);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns map_3_sample_mean field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16 GetMap3SampleMean(void)
      {
         return GetFieldUINT16Value(3);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set map_3_sample_mean field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      void SetMap3SampleMean(FIT_UINT16 map3SampleMean)
      {
         SetFieldUINT16Value(3, map3SampleMean);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns map_morning_values field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16 GetMapMorningValues(void)
      {
         return GetFieldUINT16Value(4);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set map_morning_values field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      void SetMapMorningValues(FIT_UINT16 mapMorningValues)
      {
         SetFieldUINT16Value(4, mapMorningValues);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns map_evening_values field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16 GetMapEveningValues(void)
      {
         return GetFieldUINT16Value(5);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set map_evening_values field
      // Units: mmHg
      ///////////////////////////////////////////////////////////////////////
      void SetMapEveningValues(FIT_UINT16 mapEveningValues)
      {
         SetFieldUINT16Value(5, mapEveningValues);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns heart_rate field
      // Units: bpm
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT8 GetHeartRate(void)
      {
         return GetFieldUINT8Value(6);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set heart_rate field
      // Units: bpm
      ///////////////////////////////////////////////////////////////////////
      void SetHeartRate(FIT_UINT8 heartRate)
      {
         SetFieldUINT8Value(6, heartRate);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns heart_rate_type field
      ///////////////////////////////////////////////////////////////////////
      FIT_HR_TYPE GetHeartRateType(void)
      {
         return GetFieldENUMValue(7);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set heart_rate_type field
      ///////////////////////////////////////////////////////////////////////
      void SetHeartRateType(FIT_HR_TYPE heartRateType)
      {
         SetFieldENUMValue(7, heartRateType);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns status field
      ///////////////////////////////////////////////////////////////////////
      FIT_BP_STATUS GetStatus(void)
      {
         return GetFieldENUMValue(8);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set status field
      ///////////////////////////////////////////////////////////////////////
      void SetStatus(FIT_BP_STATUS status)
      {
         SetFieldENUMValue(8, status);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns user_profile_index field
      // Comment: Associates this blood pressure message to a user.  This corresponds to the index of the user profile message in the blood pressure file.
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16 GetUserProfileIndex(void)
      {
         return GetFieldUINT16Value(9);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set user_profile_index field
      // Comment: Associates this blood pressure message to a user.  This corresponds to the index of the user profile message in the blood pressure file.
      ///////////////////////////////////////////////////////////////////////
      void SetUserProfileIndex(FIT_UINT16 userProfileIndex)
      {
         SetFieldUINT16Value(9, userProfileIndex);
      }

};

} // namespace fit

#endif // !defined(FIT_BLOOD_PRESSURE_MESG_HPP)
