////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.0Release
// Tag = $Name: AKW1_000 $
////////////////////////////////////////////////////////////////////////////////


#include "fit_mesg_definition.hpp"

namespace fit
{

MesgDefinition::MesgDefinition(void)
{
}

MesgDefinition::MesgDefinition(Mesg& mesg)
{
   num = mesg.GetNum();

   for (int i=0; i<mesg.GetNumFields(); i++)
   {
      fields.push_back(FieldDefinition(mesg.GetFieldByIndex(i)));
   }
}

FIT_BOOL MesgDefinition::operator==(const MesgDefinition& mesg)
{
   if (num != mesg.num)
      return FIT_FALSE;

   if (fields.size() != mesg.fields.size())
      return FIT_FALSE;

   for (int i=0; i<(int)fields.size(); i++)
   {
      if (fields[i] != mesg.fields[i])
         return FIT_FALSE;
   }

   return FIT_TRUE;
}      

FIT_BOOL MesgDefinition::operator!=(const MesgDefinition& mesg)
{
   return !(*this == mesg);
}

int MesgDefinition::Write(ostream &file)
{
   int mesgSize = 6;

   file.put(FIT_HDR_TYPE_DEF_BIT); // Message definition record header. Always local message number 0.
   file.put(0); // Reserved
   file.put(GetArch());
   file.put((FIT_UINT8)num);
   file.put((FIT_UINT8)(num >> 8));
   file.put((FIT_UINT8)fields.size());

   for (FIT_UINT8 i=0; i<fields.size(); i++)
   {
      int fieldSize = fields[i].Write(file);

      if (fieldSize == 0)
         return 0;

      mesgSize += fieldSize;
   }

   return mesgSize;
}

} // namespace fit
