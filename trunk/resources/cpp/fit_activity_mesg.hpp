////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.0Release
// Tag = $Name: AKW1_000 $
////////////////////////////////////////////////////////////////////////////////


#if !defined(FIT_ACTIVITY_MESG_HPP)
#define FIT_ACTIVITY_MESG_HPP

#include "fit_mesg.hpp"
#include "fit_mesg_with_event.hpp"

namespace fit
{

class ActivityMesg : public Mesg, public MesgWithEvent
{
   public:
      ActivityMesg(void) : Mesg(Profile::MESG_ACTIVITY)
      {
      }

      ActivityMesg(const Mesg &mesg) : Mesg(mesg)
      {
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns timestamp field
      ///////////////////////////////////////////////////////////////////////
      FIT_DATE_TIME GetTimestamp(void)
      {
         return GetFieldUINT32Value(253);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set timestamp field
      ///////////////////////////////////////////////////////////////////////
      void SetTimestamp(FIT_DATE_TIME timestamp)
      {
         SetFieldUINT32Value(253, timestamp);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns total_timer_time field
      // Units: s
      // Comment: Exclude pauses
      ///////////////////////////////////////////////////////////////////////
      FIT_FLOAT32 GetTotalTimerTime(void)
      {
         return GetFieldFLOAT32Value(0);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set total_timer_time field
      // Units: s
      // Comment: Exclude pauses
      ///////////////////////////////////////////////////////////////////////
      void SetTotalTimerTime(FIT_FLOAT32 totalTimerTime)
      {
         SetFieldFLOAT32Value(0, totalTimerTime);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns num_sessions field
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT16 GetNumSessions(void)
      {
         return GetFieldUINT16Value(1);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set num_sessions field
      ///////////////////////////////////////////////////////////////////////
      void SetNumSessions(FIT_UINT16 numSessions)
      {
         SetFieldUINT16Value(1, numSessions);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns type field
      ///////////////////////////////////////////////////////////////////////
      FIT_ACTIVITY GetType(void)
      {
         return GetFieldENUMValue(2);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set type field
      ///////////////////////////////////////////////////////////////////////
      void SetType(FIT_ACTIVITY type)
      {
         SetFieldENUMValue(2, type);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns event field
      ///////////////////////////////////////////////////////////////////////
      FIT_EVENT GetEvent(void)
      {
         return GetFieldENUMValue(3);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set event field
      ///////////////////////////////////////////////////////////////////////
      void SetEvent(FIT_EVENT event)
      {
         SetFieldENUMValue(3, event);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns event_type field
      ///////////////////////////////////////////////////////////////////////
      FIT_EVENT_TYPE GetEventType(void)
      {
         return GetFieldENUMValue(4);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set event_type field
      ///////////////////////////////////////////////////////////////////////
      void SetEventType(FIT_EVENT_TYPE eventType)
      {
         SetFieldENUMValue(4, eventType);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns local_timestamp field
      // Comment: Use to convert activity timestamps to local time if device does not support time zone and daylight savings time correction.
      ///////////////////////////////////////////////////////////////////////
      FIT_DATE_TIME GetLocalTimestamp(void)
      {
         return GetFieldUINT32Value(5);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set local_timestamp field
      // Comment: Use to convert activity timestamps to local time if device does not support time zone and daylight savings time correction.
      ///////////////////////////////////////////////////////////////////////
      void SetLocalTimestamp(FIT_DATE_TIME localTimestamp)
      {
         SetFieldUINT32Value(5, localTimestamp);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns event_group field
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT8 GetEventGroup(void)
      {
         return GetFieldUINT8Value(6);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set event_group field
      ///////////////////////////////////////////////////////////////////////
      void SetEventGroup(FIT_UINT8 eventGroup)
      {
         SetFieldUINT8Value(6, eventGroup);
      }

};

} // namespace fit

#endif // !defined(FIT_ACTIVITY_MESG_HPP)
