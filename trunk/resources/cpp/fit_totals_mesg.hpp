////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2008 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 1.0Release
// Tag = $Name: AKW1_000 $
////////////////////////////////////////////////////////////////////////////////


#if !defined(FIT_TOTALS_MESG_HPP)
#define FIT_TOTALS_MESG_HPP

#include "fit_mesg.hpp"

namespace fit
{

class TotalsMesg : public Mesg
{
   public:
      TotalsMesg(void) : Mesg(Profile::MESG_TOTALS)
      {
      }

      TotalsMesg(const Mesg &mesg) : Mesg(mesg)
      {
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns message_index field
      ///////////////////////////////////////////////////////////////////////
      FIT_MESSAGE_INDEX GetMessageIndex(void)
      {
         return GetFieldUINT16Value(254);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set message_index field
      ///////////////////////////////////////////////////////////////////////
      void SetMessageIndex(FIT_MESSAGE_INDEX messageIndex)
      {
         SetFieldUINT16Value(254, messageIndex);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns timestamp field
      // Units: s
      ///////////////////////////////////////////////////////////////////////
      FIT_DATE_TIME GetTimestamp(void)
      {
         return GetFieldUINT32Value(253);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set timestamp field
      // Units: s
      ///////////////////////////////////////////////////////////////////////
      void SetTimestamp(FIT_DATE_TIME timestamp)
      {
         SetFieldUINT32Value(253, timestamp);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns timer_time field
      // Units: s
      // Comment: Excludes pauses
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT32 GetTimerTime(void)
      {
         return GetFieldUINT32Value(0);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set timer_time field
      // Units: s
      // Comment: Excludes pauses
      ///////////////////////////////////////////////////////////////////////
      void SetTimerTime(FIT_UINT32 timerTime)
      {
         SetFieldUINT32Value(0, timerTime);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns distance field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT32 GetDistance(void)
      {
         return GetFieldUINT32Value(1);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set distance field
      // Units: m
      ///////////////////////////////////////////////////////////////////////
      void SetDistance(FIT_UINT32 distance)
      {
         SetFieldUINT32Value(1, distance);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns calories field
      // Units: kcal
      ///////////////////////////////////////////////////////////////////////
      FIT_UINT32 GetCalories(void)
      {
         return GetFieldUINT32Value(2);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set calories field
      // Units: kcal
      ///////////////////////////////////////////////////////////////////////
      void SetCalories(FIT_UINT32 calories)
      {
         SetFieldUINT32Value(2, calories);
      }

      ///////////////////////////////////////////////////////////////////////
      // Returns sport field
      ///////////////////////////////////////////////////////////////////////
      FIT_SPORT GetSport(void)
      {
         return GetFieldENUMValue(3);
      }

      ///////////////////////////////////////////////////////////////////////
      // Set sport field
      ///////////////////////////////////////////////////////////////////////
      void SetSport(FIT_SPORT sport)
      {
         SetFieldENUMValue(3, sport);
      }

};

} // namespace fit

#endif // !defined(FIT_TOTALS_MESG_HPP)
